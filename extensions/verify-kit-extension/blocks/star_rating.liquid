<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    crossorigin="anonymous">
  <title>Trax-API</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" defer>
  </script>


  <style>
    .alert-success {
      padding: 5px;

      font-size: 14px;
      margin-bottom: 20px;
    }

    .alert-error {
      padding: 5px;
      font-size: 14px;
      margin-bottom: 20px;
    }

    .loader {
      border: 3px solid #f3f3f3;
      /* Light grey background */
      border-top: 3px solid #3498db;
      /* Blue */
      border-radius: 50%;
      width: 14px;
      height: 14px;
      animation: spin 1s linear infinite;
      display: inline-block;
      vertical-align: middle;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    /* Optional: Adjust button size and alignment */
    #myButton {
      padding: 10px 20px;
      font-size: 16px;
    }
  </style>

</head>

<body>

  <div class="container col-md-6 mb-6">

    <!-- You will need to replace 'action' with a valid Liquid or platform-specific URL -->
    <form id="myForm" method="post" style="margin-bottom:30px">

      <div class="field">
        <input class="field__input" autocomplete="name" type="text" id="kit_no" name="kit_no" value=""
          placeholder="Kit No">
        <label class="field__label" for="kit_no">Kit No</label>
      </div>
      <span id="err_kit" class="text-danger hidden" style="font-size: 14px;">This field is required</span>
      <div class="d-flex">
        <button type="button" id="verify_kit" onclick="verifyKit()" value="" class="button mt-2">
          <span id="vf_btn">Verify kit</span>
          <div id="loader_1" class="loader" style="display: none;"></div>
        </button>
        <button type="button" style="margin-left: 10px;" id="get_pdf" onclick="getPdf()" value=""
          class="button hidden ml-2  mt-2" name="submit">
          <span id="pdf_btn">Print Kit</span>
          <div id="loader_2" class="loader" style="display: none;"></div>
        </button>
      </div>



      {% comment %} <input type="submit" value="Check status" class="btn btn-primary btn-sm mt-2" name="submit" />
      <input type="submit" value="Get pdf" class="btn btn-primary btn-sm mt-2" name="submit" /> {% endcomment %}
    </form>
    <span style="margin-bottom: 20px;" id="success_msg" class="alert-success text-success mb-6 hidden">Kit exists
      :)</span>
    <span style="margin-bottom: 20px;" id="err_msg" class="alert-error text-danger  mb-6 hidden">Kit not exists
      :(</span>
  </div>

</body>

<script>


  function verifyKit() {
    var kit_no = document.getElementById('kit_no').value;

    if (kit_no == '') {
      document.getElementById('err_kit').classList.remove('hidden');
      return false;
    }

    const button = document.getElementById('verify_kit');
    const loader = document.getElementById('loader_1');
    const buttonText = document.getElementById('vf_btn');

    // Hide button text and show loader
    buttonText.style.display = 'none';
    loader.style.display = 'inline-block';

    const myHeaders = new Headers();
    myHeaders.append("api-key", "6111f22f-twaf-6157-ezsz-0c56cfb01053");

    const formdata = new FormData();
    formdata.append("kit_number", kit_no);

    const requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: formdata,
      redirect: "follow"
    };

    fetch("https://traxmanagementapi.com/api/verify-kit", requestOptions)
      .then(response => response.json()) // Parse the response as JSON
      .then(function (result) {
        document.getElementById('err_kit').classList.add('hidden');
        console.log(result.exists); // Assuming 'result' is now a JavaScript object
        if (result.exists === true) {
          document.getElementById('success_msg').classList.remove('hidden');
          document.getElementById('err_msg').classList.add('hidden');
          document.getElementById('get_pdf').classList.remove('hidden');
        } else {
          document.getElementById('err_msg').classList.remove('hidden');
          document.getElementById('success_msg').classList.add('hidden');
        }
      })
      .catch(error => console.error(error))
      .finally(() => {
        // Restore button text and hide loader
        buttonText.style.display = 'inline';
        loader.style.display = 'none';
      });

  }

  function getPdf() {

    const button = document.getElementById('get_pdf');
    const loader = document.getElementById('loader_2');
    const buttonText = document.getElementById('pdf_btn');

    // Hide button text and show loader
    buttonText.style.display = 'none';
    loader.style.display = 'inline-block';


    var kit_no = document.getElementById('kit_no').value;
    const myHeaders = new Headers();
    myHeaders.append("api-key", "6111f22f-twaf-6157-ezsz-0c56cfb01053");

    const formdata = new FormData();
    formdata.append("kit_number", kit_no);

    const requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: formdata,
      redirect: "follow"
    };

    fetch("https://traxmanagementapi.com/api/get-pdf", requestOptions)
      .then((response) => response.json())
      .then(function (result) {
        const base64String = result.file;

        function base64ToBlob(base64, mimeType) {
          const byteCharacters = atob(base64);
          const byteNumbers = new Array(byteCharacters.length);
          for (let i = 0; i < byteCharacters.length; i++) {
            byteNumbers[i] = byteCharacters.charCodeAt(i);
          }
          const byteArray = new Uint8Array(byteNumbers);
          return new Blob([byteArray], { type: mimeType });
        }

        const pdfBlob = base64ToBlob(base64String, 'application/pdf');
        const downloadLink = document.createElement('a');
        downloadLink.href = window.URL.createObjectURL(pdfBlob);
        downloadLink.setAttribute('download', 'kit_details.pdf');

        document.body.appendChild(downloadLink);
        downloadLink.click();
        document.body.removeChild(downloadLink);

      })
      .catch((error) => console.error(error))
      .finally(() => {
        // Restore button text and hide loader
        buttonText.style.display = 'inline';
        loader.style.display = 'none';
      });
  }


</script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" defer crossorigin="anonymous">
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" defer
  crossorigin="anonymous"></script>

</html>


{% schema %}
{
"name": "VerifyKit",
"target": "section",
"settings": [
{ "type": "product", "id": "product", "label": "product", "autofill": true },
{ "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
]
}
{% endschema %}